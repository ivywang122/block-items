{"version":3,"sources":["components/EditEmptyItems.js","components/EditItems.js","data/dataItems.js","App.js","serviceWorker.js","index.js"],"names":["EditEmptyItems","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderEmptyItems","_renderEmptyItems","bind","assertThisInitialized","state","maxWidth","layoutSetting","maxHeight","maxrow","maxcolumn","space","emptyItems","prevProp","prevState","setState","_this2","react_default","a","createElement","length","map","item","index","width","height","top","left","_this$state","_width","_height","row","column","sizeX","sizeY","BlockWrapper","key","padding","className","md","Component","colorSet","styled","div","_templateObject","EditItems","renderItems","_renderItems","onDragStart","_onDragStart","onDrag","_onDrag","onDragStop","_onDragStop","onResizeStart","_onResizeStart","onResize","_onResize","onResizeStop","_onResizeStop","rndRefs","rndDelayTimeout","undefined","isLoading","items","isDragging","isResizing","helperX","helperY","helperWidth","helperHeight","isHelperOver","isOccupy","onMouseoverResizeHandler","_this3","LoadingConatiner","_this4","_this$state2","imgUrl","BrickContainer","id","zIndex","lib","ref","el","default","x","y","minWidth","minHeight","event","data","dir","delta","resizeHandleStyles","resizeHandleClasses","BrickWrapper","Brick","i","_this5","_this$state3","clearTimeout","setTimeout","Math","round","_this$state4","updatePosition","refEle","_this6","_this$state5","_this$state6","updateSize","type","_this7","handles","document","getElementsByClassName","addEventListener","handlesEventListenerIn","handlesEventListenerOut","removeEventListener","handleNodes","currentTarget","parentElement","children","classList","contains","style","opacity","bottom","background","backgroundSize","right","bottomLeft","bottomRight","topLeft","topRight","botttomRight","EditItems_templateObject","_templateObject2","_templateObject3","_templateObject4","posX","posY","zoom","App","buildEmptyItems","_buildEmptyItems","getItems","_getItems","emptyItemsLayoutSetting","objectSpread","itemsLayoutSetting","AppContainer","BlockContainer","components_EditEmptyItems","components_EditItems","col","emptyItem","concat","toConsumableArray","JSON","parse","stringify","dataItems","App_templateObject","App_templateObject2","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+9BAIMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,iBAAmBP,EAAKQ,kBAAkBC,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAExBA,EAAKW,MAAQ,CACXC,SAAUZ,EAAKD,MAAMc,cAAcD,SACnCE,UAAWd,EAAKD,MAAMc,cAAcC,UACpCC,OAAQf,EAAKD,MAAMc,cAAcE,OACjCC,UAAWhB,EAAKD,MAAMc,cAAcG,UACpCC,MAAOjB,EAAKD,MAAMc,cAAcI,MAChCC,WAAYlB,EAAKD,MAAMc,cAAcK,YAVtBlB,+KAiBAmB,EAAUC,GAAW,IAChCP,EAAkBV,KAAKJ,MAAvBc,cACFV,KAAKJ,MAAMc,gBAAkBM,EAASN,eACxCV,KAAKkB,SAAS,CACZT,SAAUC,EAAcD,SACxBE,UAAWD,EAAcC,UACzBC,OAAQF,EAAcE,OACtBC,UAAWH,EAAcG,UACzBC,MAAOJ,EAAcI,MACrBC,WAAYL,EAAcK,8CAKvB,IAAAI,EAAAnB,KACCe,EAAef,KAAKQ,MAApBO,WACR,OACEK,EAAAC,EAAAC,cAAA,WACIP,GAAcA,EAAWQ,OAAS,EAClCR,EAAWS,IAAI,SAACC,EAAMC,GACpB,OAAOP,EAAKf,iBAAiBqB,EAAMC,KAGrC,gDAMUD,EAAMC,GAAO,IAI3BC,EACAC,EACAC,EACAC,EAP2BC,EAC2B/B,KAAKQ,MAAvDM,EADuBiB,EACvBjB,MACFkB,EAFyBD,EAChBtB,SADgBsB,EACNlB,UAErBoB,EAH2BF,EACKpB,UADLoB,EACgBnB,OAa7C,OALAiB,EAAMI,EAAUR,EAAKS,IACrBJ,EAAOE,EAASP,EAAKU,OACrBR,EAAQK,EAASP,EAAKW,MACtBR,EAASK,EAAUR,EAAKY,MAGtBjB,EAAAC,EAAAC,cAACgB,EAAD,CAAcC,IAAKd,EAAKc,IAAKV,IAAKA,EAAKC,KAAMA,EAAMH,MAAOA,EAAOC,OAAQA,EAAQY,QAAS1B,EAAQ,GAChGM,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,eACbrB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,sBACbrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAQD,UAAU,YAClBrB,EAAAC,EAAAC,cAAA,6BAlEiBqB,aA2EvBC,EACE,UADFA,EAEM,UAGNN,EAAeO,IAAOC,IAAVC,IAEV,SAAAnD,GAAK,OAAIA,EAAMiC,IAAMjC,EAAMiC,IAAM,KAAO,OACtC,SAAAjC,GAAK,OAAIA,EAAMkC,KAAOlC,EAAMkC,KAAO,KAAO,OACzC,SAAAlC,GAAK,OAAIA,EAAM+B,MAAQ/B,EAAM+B,MAAQ,KAAO,QAC3C,SAAA/B,GAAK,OAAIA,EAAMgC,OAAShC,EAAMgC,OAAS,KAAO,QAC7C,SAAAhC,GAAK,OAAIA,EAAM4C,QAAU5C,EAAM4C,QAAU,KAAO,OAWpCI,EAWVA,GAQAjD,87BCpHTqD,cACJ,SAAAA,EAAYpD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACjBnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAMJ,KACDqD,YAAcpD,EAAKqD,aAAa5C,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACnBA,EAAKsD,YAActD,EAAKuD,aAAa9C,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACnBA,EAAKwD,OAASxD,EAAKyD,QAAQhD,KAAbR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACdA,EAAK0D,WAAa1D,EAAK2D,YAAYlD,KAAjBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAClBA,EAAK4D,cAAgB5D,EAAK6D,eAAepD,KAApBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACrBA,EAAK8D,SAAW9D,EAAK+D,UAAUtD,KAAfR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAChBA,EAAKgE,aAAehE,EAAKiE,cAAcxD,KAAnBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAEpBA,EAAKkE,QAAU,GACflE,EAAKmE,qBAAkBC,EAEvBpE,EAAKW,MAAQ,CACX0D,WAAW,EAEXzD,SAAUZ,EAAKD,MAAMc,cAAcD,SACnCE,UAAWd,EAAKD,MAAMc,cAAcC,UACpCC,OAAQf,EAAKD,MAAMc,cAAcE,OACjCC,UAAWhB,EAAKD,MAAMc,cAAcG,UACpCC,MAAOjB,EAAKD,MAAMc,cAAcI,MAEhCqD,MAAOtE,EAAKD,MAAMc,cAAcyD,MAEhCC,YAAY,EACZC,YAAY,EAEZC,QAAS,EACTC,QAAS,EACTC,YAAa,EACbC,aAAc,EACdC,cAAc,EACdC,UAAU,GAhCK9E,mFAoCjBG,KAAKkB,SAAS,CAAEgD,WAAW,mDAG3BlE,KAAK4E,yBAAyB,qDAEb5D,EAAUC,GAAW,IAAAE,EAAAnB,KAChCU,EAAkBV,KAAKJ,MAAvBc,cACFA,EAAcyD,QAAUnD,EAASN,cAAcyD,OACjDnE,KAAKkB,SAAS,CACZgD,WAAW,EACXC,MAAOzD,EAAcyD,OACpB,kBAAMhD,EAAKyD,yBAAyB,0CAIlC,IAAAC,EAAA7E,KAAA+B,EACsB/B,KAAKQ,MAA1B0D,EADDnC,EACCmC,UAAWC,EADZpC,EACYoC,MACnB,OAAID,EAEA9C,EAAAC,EAAAC,cAACwD,EAAD,mBAIA1D,EAAAC,EAAAC,cAAA,WACG6C,GAASA,EAAM5C,OAAS,EACvB4C,EAAM3C,IAAI,SAACC,EAAMC,GACf,OAAOmD,EAAK5B,YAAYxB,EAAMC,KAGhC,2CAQGD,EAAMC,GAAO,IAKtBC,EACAC,EACAC,EACAC,EARsBiD,EAAA/E,KAAAgF,EAC4ChF,KAAKQ,MAAnEM,EADkBkE,EAClBlE,MAAOL,EADWuE,EACXvE,SAAUI,EADCmE,EACDnE,UAAWF,EADVqE,EACUrE,UAAWC,EADrBoE,EACqBpE,OAAQwD,EAD7BY,EAC6BZ,WAEjDpC,EAASvB,EAAWI,EACtBoB,EAAUtB,EAAYC,EAKtBqE,EAASxD,EAAKwD,OAOhB,OALApD,EAAMI,EAAUR,EAAKS,IACrBJ,EAAOE,EAASP,EAAKU,OACrBR,EAAQK,EAASP,EAAKW,MACtBR,EAASK,EAAUR,EAAKY,MAGtBjB,EAAAC,EAAAC,cAAC4D,EAAD,CAAgB3C,IAAKd,EAAK0D,GAAIf,WAAYA,EAAYgB,OAAQ3D,EAAK2D,QACjEhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACEC,IAAK,SAAAC,GAAE,OAAIR,EAAKhB,QAAQtC,EAAK0D,IAAMI,GACnC9C,UAAU,aACV+C,QAAS,CACPC,EAAG3D,EACH4D,EAAG7D,EACHF,MAAOA,EACPC,OAAQA,GAEV+D,SAAU3D,EACV4D,UAAW3D,EACXkB,YAAa,SAAC0C,EAAOC,GAAR,OAAiBf,EAAK5B,YAAY0C,EAAOC,EAAMrE,IAC5D4B,OAAQ,SAACwC,EAAOC,GAAR,OAAiBf,EAAK1B,OAAOwC,EAAOC,EAAMrE,IAClD8B,WAAY,SAACsC,EAAOC,GAAR,OAAiBf,EAAKxB,WAAWsC,EAAOC,EAAMrE,IAC1DgC,cAAe,SAACoC,EAAOE,EAAKT,EAAKU,GAAlB,OAA4BjB,EAAKtB,cAAcoC,EAAOE,EAAKT,EAAK7D,IAC/EkC,SAAU,SAACkC,EAAOE,EAAKT,EAAKU,GAAlB,OAA4BjB,EAAKpB,SAASkC,EAAOE,EAAKT,EAAKU,EAAOvE,IAC5EoC,aAAc,SAACgC,EAAOE,EAAKT,EAAKU,GAAlB,OAA4BjB,EAAKlB,aAAagC,EAAOE,EAAKT,EAAKU,EAAOvE,IACpFwE,mBAAoBA,EACpBC,oBAAqBA,GAErB9E,EAAAC,EAAAC,cAAC6E,EAAD,CAAc3D,QAAS1B,GACrBM,EAAAC,EAAAC,cAAC8E,EAAD,CAAOnB,OAAQA,4CAOZY,EAAOC,EAAMrE,GAExB,IAF8B,IACxB0C,EAAUnE,KAAKQ,MAAf2D,MACEkC,EAAI,EAAGA,EAAIlC,EAAM5C,OAAQ8E,IAC5BlC,EAAMkC,GAAGlB,KAAO1D,EAAK0D,KAAIhB,EAAMkC,GAAGjB,OAAS,KAEhDpF,KAAKkB,SAAS,CAAEiD,0CAGV0B,EAAOC,EAAMrE,GAAM,IAAA6E,EAAAtG,KAAAuG,EAC2CvG,KAAKQ,MAAnE2D,EADmBoC,EACnBpC,MAAOC,EADYmC,EACZnC,WAAY3D,EADA8F,EACA9F,SAAUE,EADV4F,EACU5F,UAAWE,EADrB0F,EACqB1F,UAAWD,EADhC2F,EACgC3F,OACrDwD,GAAYpE,KAAKkB,SAAS,CAAEkD,YAAY,IAE5CoC,aAAaxG,KAAKgE,iBAClBhE,KAAKgE,gBAAkByC,WAAW,WAgB9B,IAfF,IAAIzE,EAASvB,EAAWI,EACtBoB,EAAUtB,EAAYC,EAcdyF,GAbS5E,EAAKW,MACHX,EAAKY,MACfqE,KAAKC,MAAMb,EAAKL,EAAIzD,GACvB0E,KAAKC,MAAMb,EAAKJ,EAAIzD,GAMjBR,EAAKW,MACLX,EAAKY,MAGF,GAAGgE,EAAIlC,EAAM5C,OAAQ8E,IAC5B5E,EAAK0D,GAAOhB,EAAMkC,GAAGlB,GAI1BmB,EAAKpF,SAAS,KACf,yCAGO2E,EAAOC,EAAMrE,GAAM,IAAAmF,EAC2B5G,KAAKQ,MAAvD2D,EADuByC,EACvBzC,MAAO1D,EADgBmG,EAChBnG,SAAUE,EADMiG,EACNjG,UAAWE,EADL+F,EACK/F,UAAWD,EADhBgG,EACgBhG,OACzC0E,EAAMtF,KAAK+D,QAAQtC,EAAK0D,IACxBnD,EAASvB,EAAWI,EACtBoB,EAAUtB,EAAYC,EAGtBuB,GAFiBV,EAAKW,MACHX,EAAKY,MACfqE,KAAKC,MAAMb,EAAKL,EAAIzD,IAC7BE,EAAMwE,KAAKC,MAAMb,EAAKJ,EAAIzD,GAC1BJ,EAAMK,EAAMD,EACZH,EAAOK,EAASH,EAIPP,EAAKW,MACLX,EAAKY,MAIhB,GAAGH,EAAM,GAAKC,EAAS,GAAKD,EAAMT,EAAKY,MAAQzB,GAAUuB,EAASV,EAAKW,MAAQvB,EAC7EyE,EAAIuB,eAAe,CACjBpB,EAAGhE,EAAKU,OAASH,EACjB0D,EAAGjE,EAAKS,IAAMD,QAEZ,CACJ,IAAK,IAAIoE,EAAI,EAAGA,EAAIlC,EAAM5C,OAAQ8E,IAC5B5E,EAAK0D,KAAOhB,EAAMkC,GAAGlB,KACvBhB,EAAMkC,GAAGnE,IAAMA,EACfiC,EAAMkC,GAAGlE,OAASA,EAClBgC,EAAMkC,GAAGjB,OAAS,GAGtBE,EAAIuB,eAAe,CAAEpB,EAAG3D,EAAM4D,EAAG7D,IAInC7B,KAAKkB,SAAS,CAAEiD,QAAOC,YAAY,2CAGtByB,EAAOE,EAAKe,EAAQrF,GAEjC,IAFuC,IACjC0C,EAAUnE,KAAKQ,MAAf2D,MACGkC,EAAI,EAAGA,EAAIlC,EAAM5C,OAAQ8E,IAC5BlC,EAAMkC,GAAGlB,KAAO1D,EAAK0D,KAAIhB,EAAMkC,GAAGjB,OAAS,KAEjDpF,KAAKkB,SAAS,CAAEiD,4CAGR0B,EAAOE,EAAKe,EAAQd,EAAOvE,GAAM,IAAAsF,EAAA/G,KAAAgH,EAC2BhH,KAAKQ,MAA5D6D,GAD4B2C,EACnC7C,MADmC6C,EAC5B3C,YAAY5D,EADgBuG,EAChBvG,SAAUE,EADMqG,EACNrG,UAAWE,EADLmG,EACKnG,UAAWD,EADhBoG,EACgBpG,OACpDyD,GAAYrE,KAAKkB,SAAS,CAAEmD,YAAY,IAE7CmC,aAAaxG,KAAKgE,iBAClBhE,KAAKgE,gBAAkByC,WAAW,WAChC,IAAIzE,EAASvB,EAAWI,EACtBoB,EAAUtB,EAAYC,EACtBwB,EAAQX,EAAKW,MACbC,EAAQZ,EAAKY,MACbV,EAAQS,EAAQJ,EAChBJ,EAASS,EAAQJ,EACjBE,EAASV,EAAKU,OACdD,EAAMT,EAAKS,IACXL,EAAMK,EAAMD,EACZH,EAAOK,EAASH,EAIPP,EAAKW,MACLX,EAAKY,MAIJ,YAAR0D,GAA6B,QAARA,GAAyB,aAARA,GACxClE,GAAOmE,EAAMpE,OACbA,GAAUoE,EAAMpE,QAEC,eAARmE,GAAgC,WAARA,GAA4B,gBAARA,EACrDnE,GAAUoE,EAAMpE,OAEC,YAARmE,GAA6B,SAARA,GAA0B,eAARA,GAChDjE,GAAQkE,EAAMrE,MACdA,GAASqE,EAAMrE,OAEE,gBAARoE,GAAiC,UAARA,GAA2B,aAARA,IACrDpE,GAASqE,EAAMrE,OAOjBE,GAJAK,EAAMwE,KAAKC,MAAM9E,EAAMI,IAIXA,EACZH,GAJAK,EAASuE,KAAKC,MAAM7E,EAAOE,IAIXA,EAChBL,GAJAS,EAAQsE,KAAKC,MAAMhF,EAAQK,IAIXA,EAChBJ,GAJAS,EAAQqE,KAAKC,MAAM/E,EAASK,IAIXA,EAEjB8E,EAAK7F,SAAS,KAEb,2CAGS2E,EAAOE,EAAKe,EAAQd,EAAOvE,GAAM,IAAAwF,EACWjH,KAAKQ,MAAvD2D,EADuC8C,EACvC9C,MAAO1D,EADgCwG,EAChCxG,SAAUE,EADsBsG,EACtBtG,UAAWE,EADWoG,EACXpG,UAAWD,EADAqG,EACArG,OACzC0E,EAAMtF,KAAK+D,QAAQtC,EAAK0D,IACxBnD,EAASvB,EAAWI,EACtBoB,EAAUtB,EAAYC,EACtBwB,EAAQX,EAAKW,MACbC,EAAQZ,EAAKY,MACbV,EAAQS,EAAQJ,EAChBJ,EAASS,EAAQJ,EACjBE,EAASV,EAAKU,OACdD,EAAMT,EAAKS,IACXL,EAAMK,EAAMD,EACZH,EAAOK,EAASH,EAGN,YAAR+D,GAA6B,QAARA,GAAyB,aAARA,GACxClE,GAAOmE,EAAMpE,OACbA,GAAUoE,EAAMpE,QACC,eAARmE,GAAgC,WAARA,GAA4B,gBAARA,EACrDnE,GAAUoE,EAAMpE,OACC,YAARmE,GAA6B,SAARA,GAA0B,eAARA,GAChDjE,GAAQkE,EAAMrE,MACdA,GAASqE,EAAMrE,OACE,gBAARoE,GAAiC,UAARA,GAA2B,aAARA,IACrDpE,GAASqE,EAAMrE,OAOjBE,GAJAK,EAAMwE,KAAKC,MAAM9E,EAAMI,IAIXA,EACZH,GAJAK,EAASuE,KAAKC,MAAM7E,EAAOE,IAIXA,EAChBL,GAJAS,EAAQsE,KAAKC,MAAMhF,EAAQK,IAIXA,EAChBJ,GAJAS,EAAQqE,KAAKC,MAAM/E,EAASK,IAIXA,EASjB,GAAIC,EAAM,GAAKC,EAAS,GAAKD,GAAOtB,GAAUuB,GAAUtB,GAAasB,EAASC,EAAQvB,GAAaqB,EAAMG,EAAQzB,EAC/G0E,EAAIuB,eAAe,CACjBpB,EAAGhE,EAAKU,OAASH,EACjB0D,EAAGjE,EAAKS,IAAMD,IAEhBqD,EAAI4B,WAAW,CACbvF,MAAOF,EAAKW,MAAQJ,EACpBJ,OAAQH,EAAKY,MAAQJ,QAElB,CACL,IAAK,IAAIoE,EAAI,EAAGA,EAAIlC,EAAM5C,OAAQ8E,IAC5B5E,EAAK0D,KAAOhB,EAAMkC,GAAGlB,KACvBhB,EAAMkC,GAAGnE,IAAMA,EACfiC,EAAMkC,GAAGlE,OAASA,EAClBgC,EAAMkC,GAAGjE,MAAQA,EACjB+B,EAAMkC,GAAGhE,MAAQA,GAIrBiD,EAAIuB,eAAe,CAAEpB,EAAG3D,EAAM4D,EAAG7D,IACjCyD,EAAI4B,WAAW,CAAEvF,MAAOA,EAAOC,OAAQA,IAEzC5B,KAAKkB,SAAS,CAAEiD,QAAOE,YAAY,qDAIZ8C,GAAM,IAAAC,EAAApH,KACzBqH,EAAUC,SAASC,uBAAuB,UAE9C,GAAGF,GAAWA,EAAQ9F,OAAS,EAC7B,IAAI,IAAI8E,EAAI,EAAGA,EAAIgB,EAAQ9F,OAAQ8E,IACrB,QAATc,GACDE,EAAQhB,GAAGmB,iBAAiB,YAAa,SAAA3B,GAAK,OAAIuB,EAAKK,uBAAuB5B,KAC9EwB,EAAQhB,GAAGmB,iBAAiB,WAAY,SAAA3B,GAAK,OAAIuB,EAAKM,wBAAwB7B,OAE9EwB,EAAQhB,GAAGsB,oBAAoB,YAAa,SAAA9B,GAAK,OAAIuB,EAAKK,uBAAuB5B,KACjFwB,EAAQhB,GAAGsB,oBAAoB,WAAY,SAAA9B,GAAK,OAAIuB,EAAKM,wBAAwB7B,qDAMlEA,GAGrB,IAFA,IACE+B,EADU/B,EAAMgC,cAAcC,cACVC,SACb1B,EAAI,EAAGA,EAAIuB,EAAYrG,OAAQ8E,IAClCuB,EAAYvB,GAAG2B,UAAUC,SAAS,YACpCL,EAAYvB,GAAG6B,MAAMC,QAAU,mDAKbtC,GAGtB,IAFA,IACE+B,EADU/B,EAAMgC,cAAcC,cACVC,SACb1B,EAAI,EAAGA,EAAIuB,EAAYrG,OAAQ8E,IAClCuB,EAAYvB,GAAG2B,UAAUC,SAAS,YACpCL,EAAYvB,GAAG6B,MAAMC,QAAU,UAtWfxF,aA6WlBsD,EAAqB,CACzBmC,OAAQ,CACNA,OAAQ,EACRC,WAAY,oDACZC,eAAgB,aAElBzG,IAAK,CACHA,IAAK,EACLwG,WAAY,oDACZC,eAAgB,aAElBxG,KAAM,CACJA,KAAM,EACNuG,WAAY,6CACZC,eAAgB,aAElBC,MAAO,CACLA,MAAO,EACPF,WAAY,6CACZC,eAAgB,aAElBE,WAAY,CAAE1G,KAAM,EAAGsG,OAAQ,GAC/BK,YAAa,CAAEF,MAAO,EAAGH,OAAQ,GACjCM,QAAS,CAAE5G,KAAM,EAAGD,IAAK,GACzB8G,SAAU,CAAEJ,MAAO,EAAG1G,IAAK,IAGvBqE,EAAsB,CAC1BkC,OAAQ,uBACRI,WAAY,4BACZI,aAAc,6BACd9G,KAAM,qBACNyG,MAAO,sBACP1G,IAAK,oBACL6G,QAAS,yBACTC,SAAU,2BAGN7D,EAAmBjC,IAAOC,IAAV+F,KAYhBzC,EAAQvD,IAAOC,IAAVgG,IASe,SAAAlJ,GAAK,OAAIA,EAAMqF,OAASrF,EAAMqF,OAAS,OAG3DkB,EAAetD,IAAOC,IAAViG,IAIL,SAAAnJ,GAAK,OAAIA,EAAM4C,QAAU5C,EAAM4C,QAAU,EAAI,KAAO,IAG3D0C,EAAiBrC,IAAOC,IAAVkG,IAEP,SAAApJ,GAAK,OAAIA,EAAMwF,OAASxF,EAAMwF,OAAS,GAC9BgB,EACJ,SAAAxG,GAAK,OAAIA,EAAMwE,WAAa,8BAAgC,8BAU/DpB,IC1YAmB,EA1DD,CACZ,CACEgB,GAAI,UACJjD,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACP4C,OAAQ,wDACRgE,KAAM,EACNC,KAAM,EACNC,KAAM,GAER,CACEhE,GAAI,UACJjD,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACP4C,OAAQ,wDACRgE,KAAM,EACNC,KAAM,EACNC,KAAM,GAER,CACEhE,GAAI,UACJjD,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACP4C,OAAQ,wDACRgE,KAAM,EACNC,KAAM,EACNC,KAAM,GAER,CACEhE,GAAI,UACJjD,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACP4C,OAAQ,wDACRgE,KAAM,EACNC,KAAM,EACNC,KAAM,GAER,CACEhE,GAAI,UACJjD,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACP4C,OAAQ,wDACRgE,KAAM,EACNC,KAAM,EACNC,KAAM,sPC/CJC,cACJ,SAAAA,EAAYxJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,IACjBvJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsJ,GAAAjJ,KAAAH,KAAMJ,KACDyJ,gBAAkBxJ,EAAKyJ,iBAAiBhJ,KAAtBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACvBA,EAAK0J,SAAW1J,EAAK2J,UAAUlJ,KAAfR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAEhBA,EAAKW,MAAQ,CACXC,SAAU,KACVE,UAAW,IACXC,OAAQ,EACRC,UAAW,EACXC,MAAO,GACPqD,MAAO,GACPpD,WAAY,IAZGlB,mFAiBjBG,KAAKqJ,mDAEE,IAAAtH,EACsE/B,KAAKQ,MAA1EC,EADDsB,EACCtB,SAAUE,EADXoB,EACWpB,UAAWC,EADtBmB,EACsBnB,OAAQC,EAD9BkB,EAC8BlB,UAAWC,EADzCiB,EACyCjB,MAAOqD,EADhDpC,EACgDoC,MAAOpD,EADvDgB,EACuDhB,WACxDL,EAAgB,CACpBD,SAAUA,EACVE,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,MAAOA,GAEH2I,EAAuB3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAQY,EAAR,CAAuBK,WAAYA,IAC1D4I,EAAkB7J,OAAA4J,EAAA,EAAA5J,CAAA,GAAQY,EAAR,CAAuByD,MAAOA,IACtD,OACE/C,EAAAC,EAAAC,cAACsI,EAAD,KACExI,EAAAC,EAAAC,cAACuI,EAAD,KACEzI,EAAAC,EAAAC,cAACwI,EAAD,CAAgBpJ,cAAe+I,IAC/BrI,EAAAC,EAAAC,cAACyI,EAAD,CAAWrJ,cAAeiJ,iDAShC,IAHiB,IAAAxI,EAAAnB,KACbe,EAAa,GADAiE,EAEWhF,KAAKQ,MAA3BI,EAFWoE,EAEXpE,OAAQC,EAFGmE,EAEHnE,UACLqB,EAAM,EAAGA,EAAMtB,EAAQsB,IAC9B,IAAK,IAAI8H,EAAM,EAAGA,EAAMnJ,EAAWmJ,IAAO,CACxC,IAAIC,EAAY,CACd1H,IAAKL,EAAM,IAAM8H,EACjB9H,IAAKA,EACLC,OAAQ6H,EACR5H,MAAO,EACPC,MAAO,GAETtB,EAAU,GAAAmJ,OAAApK,OAAAqK,EAAA,EAAArK,CAAOiB,GAAP,CAAmBkJ,IAGjCjK,KAAKkB,SAAS,CAAEH,cAAc,kBAAM0F,WAAW,kBAAMtF,EAAKoI,YAAY,2CAItE,IAAIpF,EACJA,EAAQiG,KAAKC,MAAMD,KAAKE,UAAUC,IAClCvK,KAAKkB,SAAS,CAAEiD,iBA9DFxB,aAqEZiH,EAAe/G,IAAOC,IAAV0H,KAIZX,EAAiBhH,IAAOC,IAAV2H,KAULrB,IC9EKsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO5J,EAAAC,EAAAC,cAAC2J,EAAD,MAAS3D,SAAS4D,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ebd1ce09.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\n\r\nclass EditEmptyItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderEmptyItems = this._renderEmptyItems.bind(this);\r\n\r\n    this.state = {\r\n      maxWidth: this.props.layoutSetting.maxWidth,\r\n      maxHeight: this.props.layoutSetting.maxHeight,\r\n      maxrow: this.props.layoutSetting.maxrow,\r\n      maxcolumn: this.props.layoutSetting.maxcolumn,\r\n      space: this.props.layoutSetting.space,\r\n      emptyItems: this.props.layoutSetting.emptyItems\r\n    }\r\n  }\r\n  componentDidMount() {\r\n  }\r\n  componentWillUnmount() {\r\n  }\r\n  componentDidUpdate(prevProp, prevState) {\r\n    let { layoutSetting } = this.props;\r\n    if (this.props.layoutSetting !== prevProp.layoutSetting) {\r\n      this.setState({ \r\n        maxWidth: layoutSetting.maxWidth,\r\n        maxHeight: layoutSetting.maxHeight,\r\n        maxrow: layoutSetting.maxrow,\r\n        maxcolumn: layoutSetting.maxcolumn,\r\n        space: layoutSetting.space,\r\n        emptyItems: layoutSetting.emptyItems\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { emptyItems } = this.state;\r\n    return(\r\n      <div>\r\n        { emptyItems && emptyItems.length > 0 ?\r\n          emptyItems.map((item, index) => {\r\n            return this.renderEmptyItems(item, index);\r\n          })\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n \r\n    );\r\n  }\r\n  _renderEmptyItems(item, index) {\r\n    let { space, maxWidth, maxcolumn, maxHeight, maxrow } = this.state;\r\n    let _width = maxWidth / maxcolumn,\r\n      _height = maxHeight / maxrow,\r\n      width = 0,\r\n      height = 0,\r\n      top = 0,\r\n      left = 0;\r\n\r\n    top = _height * item.row;\r\n    left = _width * item.column;\r\n    width = _width * item.sizeX;\r\n    height = _height * item.sizeY;\r\n\r\n    return (\r\n      <BlockWrapper key={item.key} top={top} left={left} width={width} height={height} padding={space / 2}>\r\n        <div className=\"empty-block\">\r\n          <div className=\"empty-icon-wrapper\">\r\n            <MdEdit className=\"fa-icon\" />\r\n            <div>Edit</div>\r\n          </div>\r\n        </div>\r\n      </BlockWrapper>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst colorSet = {\r\n  gray: '#c3c8d2',\r\n  deepGray: '#737d91',\r\n}\r\n\r\nconst BlockWrapper = styled.div`\r\n  position: absolute;\r\n\ttop: ${props => props.top ? props.top + 'px' : '0px'};\r\n  left: ${props => props.left ? props.left + 'px' : '0px'};\r\n  width: ${props => props.width ? props.width + 'px' : 'auto'};\r\n  height: ${props => props.height ? props.height + 'px' : 'auto'};\r\n  padding: ${props => props.padding ? props.padding + 'px' : '0px'};\r\n  box-sizing: border-box;\r\n  padding: 5px;\r\n  z-index: 1;\r\n  .empty-block{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n\t\twidth: 100%;\r\n    height: 100%;\r\n    border: 2px dashed ${colorSet.gray};\r\n    cursor: pointer;\r\n    &:hover{\r\n      background-color: rgba(0,0,0,.05);\r\n      .empty-icon-wrapper{\r\n        opacity: 1;\r\n      }\r\n    }\r\n    .empty-icon-wrapper{\r\n      text-align: center;\r\n      opacity: 0;\r\n      color: ${colorSet.deepGray};\r\n      .fa-icon{\r\n        font-size: 22px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default EditEmptyItems","import React, { Component } from 'react';\r\nimport { Rnd } from 'react-rnd';\r\nimport styled from 'styled-components';\r\n\r\nclass EditItems extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.renderItems = this._renderItems.bind(this);\r\n    this.onDragStart = this._onDragStart.bind(this);\r\n    this.onDrag = this._onDrag.bind(this);\r\n    this.onDragStop = this._onDragStop.bind(this);\r\n    this.onResizeStart = this._onResizeStart.bind(this);\r\n    this.onResize = this._onResize.bind(this);\r\n    this.onResizeStop = this._onResizeStop.bind(this);\r\n\r\n    this.rndRefs = {};\r\n    this.rndDelayTimeout = undefined;\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      \r\n      maxWidth: this.props.layoutSetting.maxWidth,\r\n      maxHeight: this.props.layoutSetting.maxHeight,\r\n      maxrow: this.props.layoutSetting.maxrow,\r\n      maxcolumn: this.props.layoutSetting.maxcolumn,\r\n      space: this.props.layoutSetting.space,\r\n\r\n      items: this.props.layoutSetting.items,\r\n\r\n      isDragging: false,\r\n      isResizing: false,\r\n\r\n      helperX: 0,\r\n      helperY: 0,\r\n      helperWidth: 0,\r\n      helperHeight: 0,\r\n      isHelperOver: false,\r\n      isOccupy: false, \r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n  }\r\n  componentWillUnmount() {\r\n    this.onMouseoverResizeHandler('remove');\r\n  }\r\n  componentDidUpdate(prevProp, prevState) {\r\n    let { layoutSetting } = this.props;\r\n    if (layoutSetting.items !== prevProp.layoutSetting.items) {\r\n      this.setState({ \r\n        isLoading: false,\r\n        items: layoutSetting.items\r\n      }, () => this.onMouseoverResizeHandler('add'))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, items } = this.state;\r\n    if (isLoading) {\r\n      return (\r\n        <LoadingConatiner>Loading...</LoadingConatiner>\r\n      );\r\n    }else {\r\n      return(\r\n        <div>\r\n          {items && items.length > 0 ?\r\n            items.map((item, index) => {\r\n              return this.renderItems(item, index);\r\n            })\r\n            :\r\n            null\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n\r\n  _renderItems(item, index) {\r\n    let { space, maxWidth, maxcolumn, maxHeight, maxrow, isDragging } = this.state;\r\n    \r\n    let _width = maxWidth / maxcolumn,\r\n      _height = maxHeight / maxrow,\r\n      width = 0,\r\n      height = 0,\r\n      top = 0,\r\n      left = 0,\r\n      imgUrl = item.imgUrl;\r\n\r\n    top = _height * item.row;\r\n    left = _width * item.column;\r\n    width = _width * item.sizeX;\r\n    height = _height * item.sizeY;\r\n\r\n    return (\r\n      <BrickContainer key={item.id} isDragging={isDragging} zIndex={item.zIndex}>\r\n        <Rnd\r\n          ref={el => this.rndRefs[item.id] = el}\r\n          className=\"item-brick\"\r\n          default={{\r\n            x: left,\r\n            y: top,\r\n            width: width,\r\n            height: height\r\n          }}\r\n          minWidth={_width}\r\n          minHeight={_height}\r\n          onDragStart={(event, data) => this.onDragStart(event, data, item)}\r\n          onDrag={(event, data) => this.onDrag(event, data, item)}\r\n          onDragStop={(event, data) => this.onDragStop(event, data, item)}\r\n          onResizeStart={(event, dir, ref, delta) => this.onResizeStart(event, dir, ref, item)}\r\n          onResize={(event, dir, ref, delta) => this.onResize(event, dir, ref, delta, item)}\r\n          onResizeStop={(event, dir, ref, delta) => this.onResizeStop(event, dir, ref, delta, item)}\r\n          resizeHandleStyles={resizeHandleStyles}\r\n          resizeHandleClasses={resizeHandleClasses}\r\n        >\r\n          <BrickWrapper padding={space}>\r\n            <Brick imgUrl={imgUrl} />   \r\n          </BrickWrapper>\r\n        </Rnd>\r\n      </BrickContainer>\r\n    );\r\n  }\r\n\r\n  _onDragStart(event, data, item) {\r\n    let { items } = this.state;\r\n    for(let i = 0; i < items.length; i++) {\r\n      if(items[i].id === item.id) items[i].zIndex = 2000;\r\n    }\r\n    this.setState({ items })\r\n  }\r\n\r\n  _onDrag(event, data, item) {\r\n    let { items, isDragging, maxWidth, maxHeight, maxcolumn, maxrow } = this.state;\r\n    if(!isDragging) this.setState({ isDragging: true });\r\n\r\n    clearTimeout(this.rndDelayTimeout);\r\n    this.rndDelayTimeout = setTimeout(() => {\r\n      let _width = maxWidth / maxcolumn,\r\n        _height = maxHeight / maxrow,\r\n        width = _width * item.sizeX,\r\n        height = _height * item.sizeY,\r\n        column = Math.round(data.x / _width),\r\n        row = Math.round(data.y / _height),\r\n        top = row * _height,\r\n        left = column * _width,\r\n        isDraggingItem = {\r\n          row: row,\r\n          column: column,\r\n          sizeX: item.sizeX,\r\n          sizeY: item.sizeY\r\n        },\r\n        isOccupy = false;\r\n        for(let i = 0; i < items.length; i++) {\r\n          if(item.id === items[i].id) {\r\n\r\n          }\r\n        }\r\n        this.setState({  })\r\n    }, 100);\r\n  }\r\n\r\n  _onDragStop(event, data, item) {\r\n    let { items, maxWidth, maxHeight, maxcolumn, maxrow } = this.state;\r\n    let ref = this.rndRefs[item.id];\r\n    let _width = maxWidth / maxcolumn,\r\n      _height = maxHeight / maxrow,\r\n      width = _width * item.sizeX,\r\n      height = _height * item.sizeY,\r\n      column = Math.round(data.x / _width),\r\n      row = Math.round(data.y / _height),\r\n      top = row * _height,\r\n      left = column * _width,\r\n      isDraggingItem = {\r\n        row: row,\r\n        column: column,\r\n        sizeX: item.sizeX,\r\n        sizeY: item.sizeY\r\n      },\r\n      isOccupy = false;\r\n\r\n    if(row < 0 || column < 0 || row + item.sizeY > maxrow || column + item.sizeX > maxcolumn) {\r\n      ref.updatePosition({\r\n        x: item.column * _width,\r\n        y: item.row * _height\r\n      });\r\n    }else {\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (item.id === items[i].id) {\r\n          items[i].row = row;\r\n          items[i].column = column;\r\n          items[i].zIndex = 2;\r\n        }\r\n      }\r\n      ref.updatePosition({ x: left, y: top });\r\n    }\r\n\r\n\r\n    this.setState({ items, isDragging: false })\r\n  }\r\n\r\n  _onResizeStart(event, dir, refEle, item) {\r\n    let { items } = this.state;\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].id === item.id) items[i].zIndex = 2000;\r\n    }\r\n    this.setState({ items })\r\n  }\r\n\r\n  _onResize(event, dir, refEle, delta, item) {\r\n    let { items, isResizing, maxWidth, maxHeight, maxcolumn, maxrow } = this.state;\r\n    if (!isResizing) this.setState({ isResizing: true });\r\n\r\n    clearTimeout(this.rndDelayTimeout);\r\n    this.rndDelayTimeout = setTimeout(() => {\r\n      let _width = maxWidth / maxcolumn,\r\n        _height = maxHeight / maxrow,\r\n        sizeX = item.sizeX,\r\n        sizeY = item.sizeY,\r\n        width = sizeX * _width,\r\n        height = sizeY * _height,\r\n        column = item.column,\r\n        row = item.row,\r\n        top = row * _height,\r\n        left = column * _width,\r\n        isResizingItem = {\r\n          row: row,\r\n          column: column,\r\n          sizeX: item.sizeX,\r\n          sizeY: item.sizeY\r\n        },\r\n        isOccupy = false;\r\n\r\n      if (dir === 'topLeft' || dir === 'top' || dir === 'topRight') {\r\n        top -= delta.height;\r\n        height += delta.height;\r\n\r\n      } else if (dir === 'bottomLeft' || dir === 'bottom' || dir === 'bottomRight') {\r\n        height += delta.height;\r\n\r\n      } else if (dir === 'topLeft' || dir === 'left' || dir === 'bottomLeft') {\r\n        left -= delta.width;\r\n        width += delta.width;\r\n\r\n      } else if (dir === 'bottomRight' || dir === 'right' || dir === 'topRight') {\r\n        width += delta.width;\r\n      }\r\n\r\n      row = Math.round(top / _height);\r\n      column = Math.round(left / _width);\r\n      sizeX = Math.round(width / _width);\r\n      sizeY = Math.round(height / _height);\r\n      top = row * _height;\r\n      left = column * _width;\r\n      width = sizeX * _width;\r\n      height = sizeY * _height;\r\n\r\n      this.setState({});\r\n        \r\n    }, 100)\r\n  }\r\n\r\n  _onResizeStop(event, dir, refEle, delta, item) {\r\n    let { items, maxWidth, maxHeight, maxcolumn, maxrow } = this.state;\r\n    let ref = this.rndRefs[item.id];\r\n    let _width = maxWidth / maxcolumn,\r\n      _height = maxHeight / maxrow,\r\n      sizeX = item.sizeX,\r\n      sizeY = item.sizeY,\r\n      width = sizeX * _width,\r\n      height = sizeY * _height,\r\n      column = item.column,\r\n      row = item.row,\r\n      top = row * _height,\r\n      left = column * _width,\r\n      isOccupy = false;\r\n\r\n    if (dir === 'topLeft' || dir === 'top' || dir === 'topRight') {\r\n      top -= delta.height;\r\n      height += delta.height;\r\n    } else if (dir === 'bottomLeft' || dir === 'bottom' || dir === 'bottomRight') {\r\n      height += delta.height;\r\n    } else if (dir === 'topLeft' || dir === 'left' || dir === 'bottomLeft') {\r\n      left -= delta.width;\r\n      width += delta.width;\r\n    } else if (dir === 'bottomRight' || dir === 'right' || dir === 'topRight') {\r\n      width += delta.width;\r\n    }\r\n\r\n    row = Math.round(top / _height);\r\n    column = Math.round(left / _width);\r\n    sizeX = Math.round(width / _width);\r\n    sizeY = Math.round(height / _height);\r\n    top = row * _height;\r\n    left = column * _width;\r\n    width = sizeX * _width;\r\n    height = sizeY * _height;\r\n    \r\n    let _resizeItem = {\r\n      row: row,\r\n      column: column,\r\n      sizeX: sizeX,\r\n      sizeY: sizeY,\r\n    };\r\n\r\n    if (row < 0 || column < 0 || row >= maxrow || column >= maxcolumn || column + sizeX > maxcolumn || row + sizeY > maxrow) {\r\n      ref.updatePosition({\r\n        x: item.column * _width,\r\n        y: item.row * _height\r\n      });\r\n      ref.updateSize({\r\n        width: item.sizeX * _width,\r\n        height: item.sizeY * _height\r\n      });\r\n    } else {\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (item.id === items[i].id) {\r\n          items[i].row = row;\r\n          items[i].column = column;\r\n          items[i].sizeX = sizeX;\r\n          items[i].sizeY = sizeY;\r\n          // _resizeItem = items[i];\r\n        }\r\n      }\r\n      ref.updatePosition({ x: left, y: top });\r\n      ref.updateSize({ width: width, height: height });\r\n    }\r\n    this.setState({ items, isResizing: false })\r\n\r\n  }\r\n\r\n  onMouseoverResizeHandler(type) {\r\n    let handles = document.getElementsByClassName('handle');\r\n\r\n    if(handles && handles.length > 0) {\r\n      for(let i = 0; i < handles.length; i++){\r\n        if(type === 'add') {\r\n          handles[i].addEventListener('mouseover', event => this.handlesEventListenerIn(event));\r\n          handles[i].addEventListener('mouseout', event => this.handlesEventListenerOut(event));\r\n        }else {\r\n          handles[i].removeEventListener('mouseover', event => this.handlesEventListenerIn(event));\r\n          handles[i].removeEventListener('mouseout', event => this.handlesEventListenerOut(event));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handlesEventListenerIn(event) {\r\n    let brick = event.currentTarget.parentElement,\r\n      handleNodes = brick.children;\r\n    for (let i = 0; i < handleNodes.length; i++) {\r\n      if (handleNodes[i].classList.contains('handle')) {\r\n        handleNodes[i].style.opacity = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  handlesEventListenerOut(event) {\r\n    let brick = event.currentTarget.parentElement,\r\n      handleNodes = brick.children;\r\n    for (let i = 0; i < handleNodes.length; i++) {\r\n      if (handleNodes[i].classList.contains('handle')) {\r\n        handleNodes[i].style.opacity = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst resizeHandleStyles = {\r\n  bottom: { \r\n    bottom: 0,\r\n    background: 'linear-gradient(90deg, transparent 30%, #fff 30%)',\r\n    backgroundSize: '30px 100%'\r\n  },\r\n  top: { \r\n    top: 0,\r\n    background: 'linear-gradient(90deg, transparent 30%, #fff 30%)',\r\n    backgroundSize: '30px 100%'\r\n  },\r\n  left: { \r\n    left: 0,\r\n    background: 'linear-gradient(transparent 30%, #fff 30%)',\r\n    backgroundSize: '100% 30px'\r\n  },\r\n  right: {\r\n    right: 0,\r\n    background: 'linear-gradient(transparent 30%, #fff 30%)',\r\n    backgroundSize: '100% 30px'\r\n  },\r\n  bottomLeft: { left: 0, bottom: 0 },\r\n  bottomRight: { right: 0, bottom: 0 },\r\n  topLeft: { left: 0, top: 0 },\r\n  topRight: { right: 0, top: 0 }\r\n}\r\n\r\nconst resizeHandleClasses = {\r\n  bottom: 'handle handle-bottom',\r\n  bottomLeft: 'handle handle-bottom-left',\r\n  botttomRight: 'handle handle-bottom-right',\r\n  left: 'handle handle-left',\r\n  right: 'handle handle-right',\r\n  top: 'handle handle-top',\r\n  topLeft: 'handle handle-top-left',\r\n  topRight: 'handle handle-top-right'\r\n}\r\n\r\nconst LoadingConatiner = styled.div`\r\n  position: relative;\r\n  z-index: 20;\r\n  width: 1080px;\r\n  height: 540px;\r\n  text-align: center;\r\n  line-height: 540px;\r\n  font-size: 120px;\r\n  color: #fefefe;\r\n  background-color: rgba(0,0,0,0.2);\r\n`;\r\n\r\nconst Brick = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n\twidth: 100%;\r\n  background-color: #EEE;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  overflow: hidden;\r\n  background-image: url(${props => props.imgUrl ? props.imgUrl : null});\r\n`;\r\n\r\nconst BrickWrapper = styled.div`\r\n  position: absolute;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n  padding: ${props => props.padding ? props.padding / 2 + 'px' : 0};\r\n`;\r\n\r\nconst BrickContainer = styled.div`\r\n  position: absolute;\r\n  z-index: ${props => props.zIndex ? props.zIndex : 2};\r\n  .item-brick:hover ${Brick}{\r\n    box-shadow: ${props => props.isDragging ? '0 8px 20px 0 rgba(0,0,0,.5)' : '0 0 20px 0 rgba(0,0,0,.5)'};\r\n  }\r\n\r\n  .handle{\r\n    opacity: 0;\r\n    transition: .25s;\r\n  }\r\n`;\r\n\r\n\r\nexport default EditItems","const items = [\r\n  {\r\n    id: 'items-0',\r\n    row: 0,\r\n    column: 0,\r\n    sizeX: 2,\r\n    sizeY: 2,\r\n    imgUrl: 'http://fakeimg.pl/440x300/282828/EAE0D0/?text=Block01',\r\n    posX: 0,\r\n    posY: 0,\r\n    zoom: 1\r\n  },\r\n  {\r\n    id: 'items-1',\r\n    row: 0,\r\n    column: 2,\r\n    sizeX: 4,\r\n    sizeY: 1,\r\n    imgUrl: 'http://fakeimg.pl/440x300/014c45/f36162/?text=Block02',\r\n    posX: 0,\r\n    posY: 0,\r\n    zoom: 1\r\n  },\r\n  {\r\n    id: 'items-2',\r\n    row: 1,\r\n    column: 4,\r\n    sizeX: 2,\r\n    sizeY: 2,\r\n    imgUrl: 'http://fakeimg.pl/440x300/f66754/37DC94/?text=Block03',\r\n    posX: 0,\r\n    posY: 0,\r\n    zoom: 1\r\n  },\r\n  {\r\n    id: 'items-3',\r\n    row: 1,\r\n    column: 3,\r\n    sizeX: 1,\r\n    sizeY: 2,\r\n    imgUrl: 'http://fakeimg.pl/440x300/ffaa1c/0072c2/?text=Block04',\r\n    posX: 0,\r\n    posY: 0,\r\n    zoom: 1\r\n  },\r\n  {\r\n    id: 'items-4',\r\n    row: 2,\r\n    column: 2,\r\n    sizeX: 1,\r\n    sizeY: 1,\r\n    imgUrl: 'http://fakeimg.pl/440x300/1d3156/f31717/?text=Block05',\r\n    posX: 0,\r\n    posY: 0,\r\n    zoom: 1\r\n  },\r\n];\r\n\r\nexport default items;","import React, { Component } from 'react';\r\nimport './scss/styles.scss';\r\nimport EditEmptyItems from './components/EditEmptyItems';\r\nimport EditItems from './components/EditItems';\r\nimport dataItems from './data/dataItems'\r\nimport styled from 'styled-components';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.buildEmptyItems = this._buildEmptyItems.bind(this);\r\n    this.getItems = this._getItems.bind(this);\r\n \r\n    this.state = {\r\n      maxWidth: 1080,\r\n      maxHeight: 540,\r\n      maxrow: 3,\r\n      maxcolumn: 6,\r\n      space: 10,\r\n      items: [],\r\n      emptyItems: []\r\n    }\r\n\r\n  }\r\n  componentDidMount() {\r\n    this.buildEmptyItems();\r\n  }\r\n  render() {\r\n    const { maxWidth, maxHeight, maxrow, maxcolumn, space, items, emptyItems } = this.state;\r\n    const layoutSetting = {\r\n      maxWidth: maxWidth,\r\n      maxHeight: maxHeight,\r\n      maxrow: maxrow,\r\n      maxcolumn: maxcolumn,\r\n      space: space,\r\n    };\r\n    const emptyItemsLayoutSetting = { ...layoutSetting, emptyItems: emptyItems };\r\n    const itemsLayoutSetting = { ...layoutSetting, items: items }\r\n    return (\r\n      <AppContainer>\r\n        <BlockContainer>\r\n          <EditEmptyItems layoutSetting={emptyItemsLayoutSetting} />\r\n          <EditItems layoutSetting={itemsLayoutSetting} />\r\n        </BlockContainer>\r\n      </AppContainer>\r\n    );\r\n  }\r\n\r\n  _buildEmptyItems() {\r\n    let emptyItems = [];\r\n    let { maxrow, maxcolumn } = this.state;\r\n    for (let row = 0; row < maxrow; row++) {\r\n      for (let col = 0; col < maxcolumn; col++) {\r\n        let emptyItem = {\r\n          key: row + '-' + col,\r\n          row: row,\r\n          column: col,\r\n          sizeX: 1,\r\n          sizeY: 1\r\n        };\r\n        emptyItems = [...emptyItems, emptyItem];\r\n      }\r\n    }\r\n    this.setState({ emptyItems }, () => setTimeout(() => this.getItems(), 300) );\r\n  }\r\n\r\n  _getItems() {\r\n    let items = [];\r\n    items = JSON.parse(JSON.stringify(dataItems));\r\n    this.setState({ items });\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nconst AppContainer = styled.div`\r\n  padding: 40px 0;\r\n`;\r\n\r\nconst BlockContainer = styled.div`\r\n  margin: auto;\r\n  width: 1080px;\r\n  height: 540px;\r\n  position: relative;\r\n`;\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}